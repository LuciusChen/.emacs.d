* .emacs.d
** 字体
*** [[https://github.com/be5invis/Iosevka][Iosevka]]
Iosevka 设计之初就是和大部分 CJK 字体等高，1:2 的比例，可以很好的解决中英文字体不对齐的问题。

可以根据 [[https://typeof.net/Iosevka/customizer][Iosevka Customizer]] 进行自定义，将 [[https://typeof.net/Iosevka/customizer][Iosevka Customizer]] 中的自定义配置粘贴在 =private-build-plans.toml= 中即可。

#+begin_src shell
$ brew install ttfautohint
$ cd Iosevka
$ npm install
$ touch private-build-plans.toml
#+end_src

#+begin_src toml
[buildPlans.iosevka-lucius]
family = "Iosevka Lucius"
spacing = "normal"
serifs = "sans"
no-cv-ss = true
export-glyph-names = false

  [buildPlans.iosevka-lucius.variants]
  inherits = "ss08"

    [buildPlans.iosevka-lucius.variants.design]
    capital-n = "standard"
    r = "compact"
    dollar = "interrupted"
    question = "corner-flat-hooked"
#+end_src

#+begin_src shell
npm run build -- ttf::iosevka-lucius
#+end_src

和 Iosevka 等高的中文字体目前有：霞鹜文楷、仓耳今楷。
*** [[https://github.com/lxgw/LxgwWenKai-Screen][LxgwWenKai Screen]]
Screen 版本粗体和 normal 有明显的区别，有利于组织文本。
*** [[http://tsanger.cn/product?keyword=%E4%BB%8A%E6%A5%B7][仓耳今楷]]
目前选用的是 02W04，这个系列的字体前面的序号越大越圆润，从接近宋体到接近楷体；W 开头的序号代表字重，04 的字重是和 Iosevka 的 normal 相近。相对于霞鹜文楷，仓耳今楷的笔画更加紧凑，显得更加正式。
*** 特殊字体
需要安装 [[https://www.wfonts.com/font/symbola][Symbola]] 字体，安装 [[https://www.wfonts.com/font/symbola][Symbola]] 后 Emoji 需要添加额外的设置，才可以用 Mac 内置的 Emoji，参考 [[http://xahlee.info/emacs/emacs/emacs_list_and_set_font.html][Emacs:Set Font in Init File]]。
** Themes
[[https://github.com/LuciusChen/modus-themes][LuciusChen/modus-themes]] forked from [[https://github.com/protesilaos/modus-themes][protesilaos/modus-themes]]
** .authinfo
#+begin_example
machine api.openai.com login apikey password ****
machine matrix.org login @lucius_chen:matrix.org  password ****
#+end_example

Matrix 的 key 是在 All Settings -> Help & About 当中的 Access Token 处获取。

** Reader
用过一段时间的 [[https://read.readwise.io][Readwise Reader]]，选择其的原因在于可以配合沉浸式翻译，达到快速阅读英文书籍及文章的目的。但是目前在 Emacs 当中也可以通过 gpt 的应用达到相同的目的。

通过 [[https://github.com/Elilif/emacs-immersive-translate][Elilif/emacs-immersive-translate]] 进行翻译。其中 [[https://platform.openai.com/][OpenAI]] 需要绑定支付方式后才可以使用，可以使用我的 [[https://bewildcard.com/i/YAOHUA][WildCard]] 邀请链接注册充值，享受88折优惠。

阅读书籍 ePub 用 [[https://depp.brause.cc/nov.el/][nov.el]]，阅读 PDF 用 [[https://github.com/vedang/pdf-tools][vedang/pdf-tools]]；RSS 订阅用 [[https://github.com/skeeto/elfeed][skeeto/elfeed]] 和 [[https://github.com/karthink/elfeed-tube][karthink/elfeed-tube]]，其中后者可以拉取字幕，配合沉浸式翻译，可以快速阅读内容，关键处再用 mpv 打开视频，点击字幕跳转到关键处。Elfeed 中也可以方便的创建 org 笔记，根据不同的类型定制模板（lucius/menu-dwim--org-capture-elfeed-show）。

ChatGPT 的应用可以通过 [[https://github.com/karthink/gptel][karthink/gptel]] 在 Emacs 当中使用。
** Program
#+begin_src shell
# java
brew install jdtls
# python
pip3 install pyright
# vue
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
nvm install node
sudo npm install -g typescript
npm install -g @volar/vue-language-server
npm install -g typescript-language-server
#+end_src
** Telega
针对 UI 做了一些修改
- 修改了 msg-heading 的背景，只保留用户名所在行的背景，并且适应长度。
- +修改了按钮的样式+ （移到 forkd 的主题中去了）
- +回复样式修改字体颜色为绿色且 =| In reply to:= 变为 | ➦:+ （已在 commit 93fedce 实现）
- 回复行中用户名过长，则省略以显示更多的「被回复」内容。
- +转发样式修改字体颜色为黄色且 ~| Forward from:~ 变为 | ➥:+ （已在 commit 93fedce 实现）

#+CAPTION: telega_forward
#+ATTR_ORG: :width 600
[[file:assets/telega_forward.png]]

#+CAPTION: telega_reply
#+ATTR_ORG: :width 600
[[file:assets/telega_reply.png]]

#+CAPTION: telega_reply_username
#+ATTR_ORG: :width 600
[[file:assets/telega_reply_username.png]]

一些很方便的 contrib 中的插件。
*** telega-url-shorten
原先插件的做法是针对每个网站的 URL 进行适配，并且配上与之相应的 icons，并不能完全满足所有 URL 缩短的目的，所以这里用 =^\\(https?://\\)\\(.\\{55\\}\\).*?$= 正则处理所有的 URL，超过一定长度后省略。
*** telega-bridge-bot
可以方便的同步 Matrix 那边的头像到 Telega 这边，对于「图象记忆者」来说，根据「头像 + username」记忆人远比单独的 username 记忆要牢固快速的多。
#+CAPTION: telega-bridge-bot
#+ATTR_ORG: :width 800
[[file:assets/telega-bridge-bot.png]]
*** telega-mnz
高亮消息中的代码块
*** Adjust the ascent to avoid gaps between slices.

*** Frequent Shortcuts
| =C-u C-c C-k= | 取消回复和附带的文件，不保留所输入文字（用得最多）        |
| =C-c C-k=     | 取消回复和附带的文件，但保留所输入文字（不用 只用上面↑） |

| =C-c  C-a= | 粘贴一切（常用，可覆盖以下两个场景：）                 |
| =C-c  C-v= | 贴 clipboard 里的东西（常用，比如刚截的图在剪贴板里） |
| =C-c  C-f= | 粘媒体文件（偶用）                                    |

| =M-g  m= | 下一个提醒（常用）        |
| =M-g  r= | 直接跳到最新消息（常用）  |
| =M-g  != | 跳转到最新的 reactions |

聊天界面

| =r= | 回复该消息 |
| =e= | 编辑该消息 |
| =d= | 删除该消息 |
| =f= | forward    |
| =s= | save       |
| =c= | copy       |
** Tricks
=C-x C-e= 可以执行 elisp 或者在 Scratch 中开启 =lisp-interaction-mode= 后，在需要执行的函数最后 =C-j= 执行。
*** Working with Frame
| Command | What it does                            |
| ~C-x 5 0~ | Close current frame                     |
| ~C-x 5 1~ | Close all frames except the current one |
| ~C-x 5 2~ | Create a new frame                      |
*** Working with windows
| Command | What it does                             |
| ~C-x 0~ | Close current window                     |
| ~C-x 1~ | Close all windows except the current one |
| ~C-x 2~ | Split current window in two vertically   |
| ~C-x 3~ | Split current window in two horizontally |
| ~C-x o~ | Switch to other window                   |
